//For GET Method

package exper.rest.client;
import javax.ws.rs.core.MediaType;
import com.sun.jersey.api.client.Client;
import com.sun.jersey.api.client.ClientResponse;
import com.sun.jersey.api.client.WebResource;
import com.sun.jersey.api.client.config.ClientConfig;
import com.sun.jersey.api.client.config.DefaultClientConfig;
public class GetExampleClient {
    public static final String BASE_URI = "http://localhost:8083/Restful-web-service";
    public static final String PATH_NAME = "/GetExampleService/name/";
    public static final String PATH_ADDRESS = "/GetExampleService/address/";
    public static void main(String[] args) {
        String name = "KUNAL";
        String address = "Mumbai";
        ClientConfig config = new DefaultClientConfig();
        Client client = Client.create(config);
        WebResource resource = client.resource(BASE_URI);
        WebResource nameResource = resource.path("rest").path(PATH_NAME + name);
        System.out.println("Client Response \n" + getClientResponse(nameResource));
        System.out.println("Response \n" + getResponse(nameResource) + "\n\n");
        WebResource ageResource = resource.path("rest").path(PATH_ADDRESS + address);
        System.out.println("Client Response \n" + getClientResponse(ageResource));
        System.out.println("Response \n" + getResponse(ageResource));
    }
    //
      Returns client response as:- GET http://localhost:8083/Restful-web-service/rest/GetExampleService/name/Arun
      @param service
      @return
     //
    private static String getClientResponse(WebResource resource) {
        return resource.accept(MediaType.TEXT_HTML).get(ClientResponse.class).toString();
    }
    //
      Returns the response as HTML
      @param service
      @return
     //
    private static String getResponse(WebResource resource) {
        return resource.accept(MediaType.TEXT_HTML).get(String.class);
    }
}





//For POST method


package exper.rest.service;
import javax.ws.rs.FormParam;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

@Path("PostExampleService")
public class PostExampleService {
    
    @POST
    
    @Path("/empInfo")
    
    @Produces(MediaType.TEXT_HTML)
    
    public String getEmpInfo(@FormParam("name") String name, @FormParam("age") String age) {
        return name + " and " + age;
    }
}
PostExampleClient.java
package exper.rest.client;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import com.sun.jersey.api.client.Client;
import com.sun.jersey.api.client.ClientResponse;
import com.sun.jersey.api.client.WebResource;
import com.sun.jersey.api.client.config.ClientConfig;
import com.sun.jersey.api.client.config.DefaultClientConfig;
import com.sun.jersey.api.representation.Form;
public class PostExampleClient {
    private static final String BASE_URI = "http://localhost:8083/Restful-web-service";
    private static final String PATH_NAME = "/PostExampleService/empInfo";
    public static void main(String[] args) throws IOException {
        Map<String, String> formDataMap = new HashMap<String, String>();
        formDataMap.put("name", "Arun");
        formDataMap.put("age", "25");
        ClientResponse res = post(formDataMap);
        System.out.println("res status :: "+ res.getStatus());
        System.out.println("res :: "+ getResponse(res));      
    }
    //
      Post Method
      @param formDataMap
      @return
     //
    private static ClientResponse post(Map<String, String> formDataMap){
        ClientConfig config = new DefaultClientConfig();
        Client client = Client.create(config);
        WebResource resource = client.resource(BASE_URI);
        WebResource nameResource = resource.path("rest").path(PATH_NAME);
        Form form = new Form();
        Iterator<String> itr = formDataMap.keySet().iterator();
        while(itr.hasNext()){
            String key = itr.next();
            form.add(key, formDataMap.get(key));
        }  
        ClientResponse res = nameResource.post(ClientResponse.class, form);
        System.out.println("Client Response \n" + getClientResponse(nameResource));
        return res;
    }
    //
      Returns client response
      @param resource
      @return
     //
    private static String getClientResponse(WebResource resource) {
        return resource.getURI().toString();
    }
    //
      Returns the response
      @param res
      @return
      @throws IOException
     //
    private static String getResponse(ClientResponse res) throws IOException {      
        InputStream is = res.getEntityInputStream();
        byte[] b = new byte[20000];
        is.read(b);
        return new String(b);
    }
}